package de.deaddoctor

data class Game(val id: Int, val link: String, val winner: Role, val map: String, val players: Map<Player, Role>, val totalTasks: Int?, val completedTasks: Map<Player, Int>)

enum class Role {
    CREWMATE,
    IMPOSTER,
    ENGINEER,
    SCIENTIST,
    SHAPESHIFTER,
    JESTER,
    SHERIFF,
    MAYOR,
    MEDIC,
    SWAPPER,
    SWOOPER,
    JANITOR,
    GIANT_CREWMATE,
    GIANT_IMPOSTER,
    FLASH_IMPOSTER,
    FLASH_CREWMATE,
    GUARDIAN_ANGEL,
    DETECTIVE,
    ALTRUIST,
    TRACKER,
    MORPHLING,
    ESCAPIST,
    CREWMATE_LOVER,
    IMPOSTER_LOVER,
    LOVER,
    TRAITOR,
    GRENADIER,
    SEER,
    SPY,
    MYSTIC,
    TRAPPER,
    PHANTOM,
    HAUNTER,
    WEREWOLF,
    AMNESIAC,
    BLACKMAILER,
    INVESTIGATOR,
    SURVIVOR,
    SNITCH,
    MINER,
    GLITCH,
    JUGGERNAUT,
    BOMBER,
    CAMOUFLAGER,
    BOUNTY_HUNTER,
    NINJA,
    VAMPIRE,
    WARLOCK,
    CHAMELEON_CREWMATE,
    CHAMELEON_IMPOSTER,
    BAD_LAWYER,
    MEDIUM,
    SECURITY_GUARD,
    PORTAL_MAKER,
    WITCH,
    ERASER,
    PURSUER,
    DEPUTY,
    PROSECUTOR,
    CLEANER,
    GODFATHER,
    MAFIOSO,
    BLOODY_VULTURE,
    INVERT_THIEF,
    SUNGLASSES_LIGHTER,
    VULTURE,
    INVERT_MAYOR,
    THIEF,
    LIGHTER,
    BLOODY_BOMBER,
    SUNGLASSES_TRAPPER,
    BLOODY_CREWMATE,
    INVERT_CREWMATE,
    MINI_CREWMATE,
    MINI_IMPOSTER,
    INVERT_VULTURE,
    TIME_MASTER,
    SUNGLASSES_CREWMATE,
    CHAMELEON_MORPHLING,
    SUNGLASSES_TIME_MASTER,
    ENGINEER_LOVER,
    SUNGLASSES_NICE_GUESSER,
    BAIT_BOUNTY_HUNTER,
    MINI_JESTER,
    ANTI_TP_THIEF,
    CHAMELEON_CAMOUFLAGER,
    INVERT_JACKAL,
    BLOODY_PURSUER,
    ARSONIST_LOVER,
    SUNGLASSES_MAYOR,
    INVERT_CAMOUFLAGER,
    SWAPPER_LOVER,
    BLOODY_BOUNTY_HUNTER,
    MINI_ARSONIST,
    ANTI_TP_JESTER,
    CHAMELEON_SPY,
    BAIT_VULTURE,
    ARSONIST,
    TIE_BREAKER_ARSONIST,
    MINI_VULTURE,
    CHAMELEON_JACKAL,
    TRAPPER_LOVER,
    SPY_LOVER,
    VIP_ERASER,
    ANTI_TP_MORPHLING,
    INVERT_JESTER,
    JACKAL,
    TIE_BREAKER_PURSUER,
    BLOODY_TIME_MASTER,
    JESTER_LOVER,
    ANTI_TP_NINJA,
    JACKAL_LOVER,
    VIP_TRAPPER,
    MINI_BOUNTY_HUNTER,
    SUNGLASSES_ENGINEER,
    AURIAL,
    VENERER,
    NOISE_MAKER,
    PHANTOM_IMPOSTER,
    VETERAN,
    EXECUTIONER,
    SHIFTER,
    JOKER,
    ORACLE,
    PLAGUEBEARER,
    DOOMSAYER,
    TIME_LORD,
    UNDERTAKER,
    PELICAN,
    PRIEST,
    IMITATOR,
    BODYGUARD,
    ASTRAL,
    TRANSPORTER,
    VIGILANTE,
    HUNTER,
    BAIT_CREWMATE,
    DISEASED_CREWMATE;

    companion object {
        private val unknownRoles = mutableListOf<String>()

        fun parse(name: String): Role {
            val id = name.uppercase().replace(" ", "_")
            return try {
                Role.valueOf(id)
            } catch (e: IllegalArgumentException) {
                if (!unknownRoles.contains(id)) {
                    unknownRoles.add(id)
                    println("Unregistered role encountered: $id")
                }
                CREWMATE
            }
        }
    }
}

typealias Player = String